"""–ú–æ–¥—É–ª—å –∏–≥—Ä–æ–∫–∞"""
from aiogram import types
import game
import bot_raccoon
import text


async def player_turn(message: types.Message):
    """–•–æ–¥ –∏–≥—Ä–æ–∫–∞"""
    name = message.from_user.full_name
    await message.answer(f'{name}, —Ç–≤–æ–π —Ö–æ–¥! –°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–µ—Ç –≤–æ–∑—å–º–µ—à—å?')


async def player_game(message: types.Message, take: str, name: str):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞"""
    if take.isdigit():
        take = int(take)
        if (game.get_total() - take) < 0:
            await message.answer(f'{name}, —Ö–æ—á–µ—Ç –≤–∑—è—Ç—å - {take} {text.declension_sweets(take)[0]},'
                                 f' –Ω–æ –Ω–∞ —Å—Ç–æ–ª–µ –≤—Å–µ–≥–æ {game.get_total()}.\n'
                                 f'–í–æ–∑—å–º–∏ –ø–æ–º–µ–Ω—å—à–µ, –Ω–µ –∂–∞–¥–Ω–∏—á–∞–πüòÉ')
        elif take <= 0 or take > game.update_step():
            await message.answer(f'{name}, –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 –∏ '
                                 f'–Ω–µ –±–æ–ª–µ–µ {game.update_step()}üëÜ')
        elif 1 <= take <= game.update_step():
            game.take_sweets(take)
            if await game.check_win(message, 'player'):
                return
            if take <= 5:
                await message.answer(f'{name} –±–µ—Ä–µ—Ç –≤—Å–µ–≥–æ {take} '
                                     f'{text.declension_sweets(take)[0]}.'
                                     f'\n–ß—Ç–æ —Ç–∞–∫ –º–∞–ª–æ? –ë–µ—Ä–∏ –±–æ–ª—å—à–µ,'
                                     f' –Ω–µ —Å–∫—Ä–æ–º–Ω–∏—á–∞–πüòã\n\n'
                                     f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {game.get_total()} '
                                     f'{text.declension_sweets(game.get_total())[1]}. '
                                     f'–•–æ–¥–∏—Ç –ï–Ω–æ—Ç!')
                await bot_raccoon.bot_turn(message)
            elif take >= game.update_step() - 5:
                await message.answer(f'{name} –±–µ—Ä–µ—Ç –∞–∂ {take} {text.declension_sweets(take)[0]}.'
                                     f'\n–ú–Ω–æ–≥–æ —Å–ª–∞–¥–∫–æ–≥–æ –≤—Ä–µ–¥–Ω–æüòè\n'
                                     f'\n–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {game.get_total()} '
                                     f'{text.declension_sweets(game.get_total())[1]}. –•–æ–¥–∏—Ç –ï–Ω–æ—Ç!')
                await bot_raccoon.bot_turn(message)
            else:
                await message.answer(f'{name} –±–µ—Ä–µ—Ç {take} {text.declension_sweets(take)[0]}.'
                                     f'\n–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {game.get_total()} '
                                     f'{text.declension_sweets(game.get_total())[1]}. –•–æ–¥–∏—Ç –ï–Ω–æ—Ç!')
                await bot_raccoon.bot_turn(message)
    else:
        await message.answer(f'–ß—Ç–æ-—Ç–æ —Ç—É—Ç –Ω–µ —Ç–æ! –í–≤–æ–¥–∏ —á–∏—Å–ª–æü§¶')
