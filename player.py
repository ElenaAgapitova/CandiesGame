"""–ú–æ–¥—É–ª—å –∏–≥—Ä–æ–∫–∞"""
from aiogram import types
import game
import bot_raccoon
import text
import datetime
from create import bot


async def log_user(message: types.Message):
    """–ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–∞–π–ª"""
    now = datetime.datetime.now()
    user = list()
    user.append(now.strftime("%d-%m-%Y %H:%M"))
    user.append('id: ' + str(message.from_user.id))
    user.append('full_name: ' + str(message.from_user.full_name))
    user.append('username: ' + str(message.from_user.username))
    with open('users.txt', 'a', encoding='UTF-8') as data:
        data.write(' | '.join(user) + '\n')


async def player_turn(user_id: int):
    """–•–æ–¥ –∏–≥—Ä–æ–∫–∞"""
    await bot.send_message(chat_id=user_id, text='–¢–≤–æ–π —Ö–æ–¥! –°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–µ—Ç –≤–æ–∑—å–º–µ—à—å?')


async def player_game(user_id: int, take: str, name: str):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞"""
    if take.isdigit():
        take = int(take)
        if (game.get_total(user_id) - take) < 0:
            await bot.send_message(chat_id=user_id,
                                   text=f'{name}, —Ö–æ—á–µ—Ç –≤–∑—è—Ç—å - {take} {text.declension_sweets(take)[0]},'
                                        f' –Ω–æ –Ω–∞ —Å—Ç–æ–ª–µ –≤—Å–µ–≥–æ {game.get_total(user_id)}.\n'
                                        f'–í–æ–∑—å–º–∏ –ø–æ–º–µ–Ω—å—à–µ, –Ω–µ –∂–∞–¥–Ω–∏—á–∞–πüòÉ')
        elif take <= 0 or take > game.users[user_id]['step']:
            await bot.send_message(chat_id=user_id,
                                   text=f'{name}, –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 –∏ '
                                        f'–Ω–µ –±–æ–ª–µ–µ {game.users[user_id]["step"]}üëÜ')
        elif 1 <= take <= game.users[user_id]["step"]:
            game.users[user_id]['turn'] = False
            game.take_sweets(user_id, take)
            if await game.check_win(user_id, name, 'player'):
                return
            if take <= 5:
                await bot.send_message(chat_id=user_id,
                                       text=f'{name} –±–µ—Ä–µ—Ç –≤—Å–µ–≥–æ {take} '
                                            f'{text.declension_sweets(take)[0]}.'
                                            f'\n–ß—Ç–æ —Ç–∞–∫ –º–∞–ª–æ? –ë–µ—Ä–∏ –±–æ–ª—å—à–µ,'
                                            f' –Ω–µ —Å–∫—Ä–æ–º–Ω–∏—á–∞–πüòã\n\n'
                                            f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {game.get_total(user_id)} '
                                            f'{text.declension_sweets(game.get_total(user_id))[1]}. '
                                            f'–•–æ–¥–∏—Ç –ï–Ω–æ—Ç!')
                await bot_raccoon.bot_turn(user_id)
            elif take >= game.users[user_id]["step"] - 5:
                await bot.send_message(chat_id=user_id,
                                       text=f'{name} –±–µ—Ä–µ—Ç –∞–∂ {take} {text.declension_sweets(take)[0]}.'
                                            f'\n–ú–Ω–æ–≥–æ —Å–ª–∞–¥–∫–æ–≥–æ –≤—Ä–µ–¥–Ω–æüòè\n'
                                            f'\n–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {game.get_total(user_id)} '
                                            f'{text.declension_sweets(game.get_total(user_id))[1]}. '
                                            f'–•–æ–¥–∏—Ç –ï–Ω–æ—Ç!')
                await bot_raccoon.bot_turn(user_id)
            else:
                await bot.send_message(chat_id=user_id,
                                       text=f'{name} –±–µ—Ä–µ—Ç {take} {text.declension_sweets(take)[0]}.'
                                            f'\n–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {game.get_total(user_id)} '
                                            f'{text.declension_sweets(game.get_total(user_id))[1]}. '
                                            f'–•–æ–¥–∏—Ç –ï–Ω–æ—Ç!')
                await bot_raccoon.bot_turn(user_id)
    else:
        await bot.send_message(chat_id=user_id,
                               text=f'–ß—Ç–æ-—Ç–æ —Ç—É—Ç –Ω–µ —Ç–æ! –í–≤–æ–¥–∏ —á–∏—Å–ª–æü§¶')
