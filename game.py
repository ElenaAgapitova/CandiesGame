"""–ú–æ–¥—É–ª—å –∏–≥—Ä—ã"""
from asyncio import sleep

from create import bot
import kb_inline
import player
import bot_raccoon

SET_TOTAL = 150
SET_STEP = 28
LEVEL = '—Å –≥–ª—É–ø—ã–º –ï–Ω–æ—Ç–æ–º'
users = {}


def default_decorator(func):
    async def wrapper(*args, **kwargs):
        user_id = args[0]
        if user_id in users.keys():
            return await func(*args, **kwargs)
        else:
            await bot.send_message(chat_id=user_id,
                                   text='–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –°–µ–π—á–∞—Å –≤—Å–µ –ø–æ–ø—Ä–∞–≤–∏–ºüòá'
                                        '\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑–æ–∫.')
            users[user_id] = {'candy_total': SET_TOTAL, 'change_total': SET_TOTAL,
                              'step': SET_STEP, 'turn': None,
                              'level': LEVEL, 'game': False}
            print(users)
    return wrapper


# @default_decorator
async def update_step(user_id: int, value: int):
    """–ò–∑–º–µ–Ω–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –∑–∞ —Ö–æ–¥"""
    users[user_id]['step'] = value
    return users[user_id]['step']


# @default_decorator
def update_total(user_id: int, value: int) -> int:
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ñ–µ—Ç –¥–æ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    users[user_id]['change_total'] = value
    return users[user_id]['change_total']


# @default_decorator
def get_total(user_id: int) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç"""
    return users[user_id]['candy_total']


# @default_decorator
def take_sweets(user_id: int, take: int):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ñ–µ—Ç –ø–æ—Å–ª–µ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –±–æ—Ç–∞"""
    users[user_id]['candy_total'] -= take
    return users[user_id]['candy_total']


# @default_decorator
def new_game(user_id: int):
    """–°—Ç–∞—Ä—Ç –Ω–æ–≤–æ–π –∏–≥—Ä—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    if users[user_id]['game']:
        users[user_id]['game'] = False
    else:
        users[user_id]['game'] = True
    return users[user_id]['game']


# @default_decorator
def check_game(user_id: int):
    """–°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã"""
    return users[user_id]['game']


# @default_decorator
async def check_win(user_id: int, name: str, whose_turn: str):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–∏–≥—Ä—ã—à–∞ –ø–æ—Å–ª–µ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –±–æ—Ç–∞"""
    img1 = open('images\\no.jpg', 'rb')
    img2 = open('images\\yes.jpg', 'rb')
    if users[user_id]['candy_total'] == 0:
        if whose_turn == 'player':
            users[user_id]['turn'] = False
            await bot.send_photo(user_id, img2, caption=f'–ö–æ–Ω—Ñ–µ—Ç –Ω–∞ —Å—Ç–æ–ª–µ –±–æ–ª—å—à–µ –Ω–µ—Ç!'
                                                        f'\n{name}, —Ç—ã –∑–∞–±–∏—Ä–∞–µ—à—å '
                                                        f'–≤—Å—ë.\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!ü•á')
            await bot.send_message(chat_id=user_id, text='–°—ã–≥—Ä–∞–µ–º –µ—â–µ?üòâ',
                                   reply_markup=kb_inline.markup)
        else:
            users[user_id]['turn'] = False
            await bot.send_photo(user_id, img1, caption=f'–ö–æ–Ω—Ñ–µ—Ç –±–æ–ª—å—à–µ –Ω–µ—Ç!\n–í—ã–∏–≥—Ä–∞–ª –ï–Ω–æ—Ç!üéâ\n')
            await bot.send_message(chat_id=user_id,
                                   text='–ö–∞–∫ –Ω–∞—Å—á–µ—Ç —Ä–µ–≤–∞–Ω—à–∞?üòé', reply_markup=kb_inline.markup)
        new_game(user_id)
        return True
    else:
        return False


# @default_decorator
async def update_level(user_id: int):
    """–ò–∑–º–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã"""
    if users[user_id]['level'] == '—Å –≥–ª—É–ø—ã–º –ï–Ω–æ—Ç–æ–º':
        users[user_id]['level'] = '—Å —É–º–Ω—ã–º –ï–Ω–æ—Ç–æ–º'
    else:
        users[user_id]['level'] = '—Å –≥–ª—É–ø—ã–º –ï–Ω–æ—Ç–æ–º'


# @default_decorator
async def start_game(user_id: int):
    """–ù–æ–≤–∞—è –∏–≥—Ä–∞"""
    users[user_id]['candy_total'] = users[user_id]['change_total']
    users[user_id]['game'] = True
    if check_game(user_id):
        await show_param(user_id)
        await bot.send_message(chat_id=user_id,
                               text=f'–ë—Ä–æ—Å–∏–º –∫–æ—Å—Ç—åüé≤\n<b>–ß–µ—Ç</b> - —Ö–æ–¥–∏—à—å —Ç—ã!\n<b>–ù–µ—á–µ—Ç</b>- '
                                    f'—Ö–æ–¥–∏—Ç –ï–Ω–æ—Ç!')
        dice_msg = await bot.send_dice(chat_id=user_id)
        await sleep(4)
        dice_value = dice_msg.dice.value
        users[user_id]['turn'] = dice_value % 2 == 0
        if not dice_value % 2:
            await player.player_turn(user_id)
        else:
            await bot.send_message(chat_id=user_id, text='–ü–µ—Ä–≤—ã–π —Ö–æ–¥–∏—Ç –ï–Ω–æ—Ç!')
            await bot_raccoon.bot_turn(user_id)


async def show_param(user_id: int):
    await bot.send_message(chat_id=user_id,
                           text=f'<b><u>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥—Ä—ã:</u></b>\n'
                                f'\t‚ñ∏ –ö–æ–Ω—Ñ–µ—Ç—ã –Ω–∞ —Å—Ç–æ–ª–µ - {users[user_id]["candy_total"]}\n'
                                f'\t‚ñ∏ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –∑–∞ —Ö–æ–¥ - '
                                f'{users[user_id]["step"]}\n'
                                f'\t‚ñ∏ –ò–≥—Ä–∞–µ—à—å {users[user_id]["level"]}')
